% convert mat (or loaded mat as var) to csv (name optionally in second argument)
% csv file has header
% for i=dir('behave/BTC*.mat')'; behave(['behave/',i.name]), end
% if second argument is 'nowrite', will not write a file
function beh=behave(f,varargin)

 if isa(f,'char')
   try 
     r=load(f);
   catch
     r=load(f);
   end
 elseif isa(f,'struct')
   r=f;
 else 
   error('I dont know what to do with a "%s"',class(f))
 end

 %% now have block outputs in structre
 % r has
 %  res         cell of structs of event info
 %  subj        subject id
 %  blocktype   block id (1-3 are pure, 4 is random mix)
 %  e           event list generated by private/genEventList.m
 %  emat        cng/nbk/inf seq and crtkey list
 % ---
 %  - trial type per event (ea. of fix,cue,rsp, ...)
 %     cellfun( @(x) x.tt, r.res, 'UniformOutput',0 )
 %     % OR
 %     r.e.tt


 %% only care about responses for behavioral stuff
 % create struct "beh" that has vectors of length N (120)
 % for interesting things like
 %   - trial type 
 %   - correct/incorrect
 %   - RT
 %   - correct key, pushed key
 %   - is trl a switch?
 %   - is trl XXX
 %   - what index was the correct key
 
 r=truncateres(r);
 % use event list to find when we had a response event
 rsp = cellfun(@(x) ~isempty(strmatch(x,'Rsp','exact')), {r.e.name});
 
 % cuts off good trials - WF20150226
 % if we exited early, we dont have all of rsp so truncate to what we have
 %dididx = cellfun(@(x) ~isempty(x), r.res(rsp) );
 %rsp=rsp(dididx);

 % grab numeric things from responses 
 for fld={'seqCrct','seqRT','pushed','crctKey'}
    fld=fld{1};
    beh.(fld)=cellfun(@(x) x.(fld), r.res(rsp) );
 end

 % transform trial types to number
 types={'Nback','Interfere','Congruent'};
 for i=1:length(types)
   idx=strncmp(types{i},{r.e(rsp).tt},5);
   beh.tt(idx)=i;
 end

 % find out if we were in a switch
 beh.is_switch = zeros(1,length(beh.tt));
 beh.is_switch(find([0 diff(beh.tt)])) = 1;

 % find if is nback probe
 % -- use event param # 3 (0=norma,1=nbk probe)
 %    get to it by finding all rsp events 
 %    and then all the nback responses
 %    and then the parameter of those responses
 beh.is_probe = nan(1,length(beh.tt));
 rspidx=find(rsp);
 idx=rspidx(beh.tt==1);
 isnbk = cellfun(@(x) x{3}, {r.e(idx).params });
 beh.is_probe(beh.tt==1) = isnbk;


 % sequence shown to subj
 beh.sequence=arrayfun( @(x) [x.params{2}{:}], r.e(rsp), 'UniformOutput',0);
 beh.sequence(beh.is_probe==1) = {'XXX'};

 %add trial number and onset time
 beh.trialno    = cellfun(@(x) x.trl, r.res(rsp) );
 beh.rsponset = cellfun(@(x) x.onset, r.res(rsp) );
 

 %% save output for R n'at
 % output name is varargin
 % or is constructed from subject/date info
 if ~isempty(varargin)
  outname=varargin{1};

 else
  % at some point we started tracking the date string
  % but if we dont have it, use the first onset time
  if isfield(r,'dstr')
   dstr=r.dstr;
  else
   dstr=num2str(r.res{1}.onset);
  end
  outdir='behave/csv/';
  if ~exist(outdir,'dir')
     mkdir(outdir)
  end
  outname= [outdir r.subj '_' num2str(r.blocktype) '_' dstr '.csv'];
 end
 
 % write as matrix 
 %  * 20150107WF - added sequence, not just numbers, cant do this trick
 % seqCrct seqRT pushed crctKey tt is_switch is_probe
 % dlmwrite(outname, cell2mat(struct2cell(beh))' )
 
 if ~strncmp(outname,'nowrite',7)
    writestructCSV(outname,beh);
 end

 beh.savedas=outname;
end
